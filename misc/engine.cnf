# Copyright (c) 2020 Huawei Technologies Co., Ltd.
# A-Tune is licensed under the Mulan PSL v2.
# You can use this software according to the terms and conditions of the Mulan PSL v2.
# You may obtain a copy of Mulan PSL v2 at:
#     http://license.coscl.org.cn/MulanPSL2
# THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR FIT FOR A PARTICULAR
# PURPOSE.
# See the Mulan PSL v2 for more details.
# Create: 2020-9-4

#################################### engine ###############################
[server]
# the tuning optimizer host and port, start by engine.service
# if engine_host is same as rest_host, two ports cannot be same
# the port can be set between 0 to 65535 which not be used
engine_host = localhost
engine_port = 3838

# enable engine server authentication SSL/TLS
# default is true
engine_tls = true
tlsenginecacertfile = /etc/atuned/engine_certs/ca.crt
tlsengineservercertfile = /etc/atuned/engine_certs/server.crt
tlsengineserverkeyfile = /etc/atuned/engine_certs/server.key

#################################### log ###############################
[log]
# either "debug", "info", "warn", "error", "critical", default is "info"
level = info
# you can set log_dir to specify the location where the log is written,specified directory can only be under /var/log/atune,default location is /var/log/messages
# log_dir = /var/log/atune

#################################### database ###############################
[database]
# enable database server
# default is false
db_enable = false

# information about database
# currently support for PostgreSQL database
database = PostgreSQL

# the database service listening host and port
db_host = localhost
db_port = 5432

# database name
db_name = atune_db

# default analysis type
db_analysis_type = ["CPU.STAT.usr", "CPU.STAT.nice", "CPU.STAT.sys", "CPU.STAT.iowait", "CPU.STAT.irq", "CPU.STAT.soft", "CPU.STAT.steal", "CPU.STAT.guest", "CPU.STAT.util", "CPU.STAT.cutil", "STORAGE.STAT.rs", "STORAGE.STAT.ws", "STORAGE.STAT.rMBs", "STORAGE.STAT.wMBs", "STORAGE.STAT.rrqm", "STORAGE.STAT.wrqm", "STORAGE.STAT.rareq-sz", "STORAGE.STAT.wareq-sz", "STORAGE.STAT.r_await", "STORAGE.STAT.w_await", "STORAGE.STAT.util", "STORAGE.STAT.aqu-sz", "NET.STAT.rxkBs", "NET.STAT.txkBs", "NET.STAT.rxpcks",  "NET.STAT.txpcks", "NET.STAT.ifutil", "NET.ESTAT.errs", "NET.ESTAT.util", "MEM.BANDWIDTH.Total_Util", "PERF.STAT.IPC", "PERF.STAT.CACHE-MISS-RATIO","PERF.STAT.MPKI", "PERF.STAT.ITLB-LOAD-MISS-RATIO", "PERF.STAT.DTLB-LOAD-MISS-RATIO", "PERF.STAT.SBPI", "PERF.STAT.SBPC", "MEM.VMSTAT.procs.b", "MEM.VMSTAT.memory.swpd", "MEM.VMSTAT.io.bo",  "MEM.VMSTAT.system.in", "MEM.VMSTAT.system.cs", "MEM.VMSTAT.util.swap", "MEM.VMSTAT.util.cpu", "MEM.VMSTAT.procs.r", "SYS.TASKS.procs", "SYS.TASKS.cswchs", "SYS.LDAVG.runq-sz", "SYS.LDAVG.plist-sz", "SYS.LDAVG.ldavg-1", "SYS.LDAVG.ldavg-5", "SYS.FDUTIL.fd-util"]

# database user info
# user_passwd should be encrypted according to Advanced Encryption Standard (AES)
# you can use ./tools/encrypt.py to encrypt your password
# db_user_name = admin
# db_passwd_key = 
# db_passwd_iv = 
# db_user_passwd = 

#################################### bottleneck ###############################
[bottleneck]
# computing
cpu_stat_util = 80
cpu_stat_cutil = 80
perf_stat_ipc = 1

# memory
mem_bandwidth_total_util = 70
mem_vmstat_util_swap = 70
mem_vmstat_util_cpu = 70

# network
net_stat_ifutil = 70
net_estat_errs = 1

# network I/O
net_stat_rxkbs = 70
net_stat_txkbs = 70

# disk I/OF
storage_stat_util = 70
